{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/ProgressBar.js","components/TodoList.js","img/todo_img4.svg","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text","className","placeholder","onChange","name","ref","onClick","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","ProgressBar","style","width","progress","TodoList","setTodos","counter","setCounter","completed","setCompleted","test","newTodos","console","log","updatedTodos","removedItem","find","removedArr","filter","todoId","newValue","prev","item","round","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.950d0373.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input\r\n    });\r\n    setInput('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className='todo-form'>\r\n      {props.edit ? (\r\n        <>\r\n          <input\r\n            placeholder='Update your item'\r\n            value={input}\r\n            onChange={handleChange}\r\n            name='text'\r\n            ref={inputRef}\r\n            className='todo-input edit'\r\n          />\r\n          <button onClick={handleSubmit} className='todo-button edit'>\r\n            Update\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            placeholder='Add a todo'\r\n            value={input}\r\n            onChange={handleChange}\r\n            name='text'\r\n            className='todo-input'\r\n            ref={inputRef}\r\n          />\r\n          <button onClick={handleSubmit} className='todo-button'>\r\n            Add todo\r\n          </button>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\n\r\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\r\n  \r\n  \r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: ''\r\n  });\r\n\r\n  const submitUpdate = value => {\r\n    updateTodo(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      value: ''\r\n    });\r\n  };\r\n\r\n  if (edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n\r\n  return <div className=\"todo-list\">\r\n  {todos.map((todo, index) => (\r\n    <div\r\n      className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n      key={index}\r\n      \r\n    >\r\n      <div className='todo-name' key={todo.id} onClick={() => completeTodo(todo.id)} >\r\n        {todo.text}\r\n      </div>\r\n      <div className='icons'>\r\n        <RiCloseCircleLine\r\n          onClick={() => removeTodo(todo.id)}\r\n          className='delete-icon'\r\n        />\r\n        <TiEdit\r\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n          className='edit-icon'\r\n        />\r\n      </div>\r\n    </div>\r\n  ))}\r\n  </div>\r\n};\r\n\r\nexport default Todo;","import \"../style/progress_bar.scss\"\r\nimport React, { useState } from 'react';\r\n\r\nfunction ProgressBar(props){\r\n    \r\n     \r\n      return (\r\n        <div className=\"container\">\r\n          <h1>Your progress bar!</h1>\r\n          <div className=\"progressbar-container\">\r\n            <div className=\"progressbar-complete\" style={{width: `${props.progress}%`}}>\r\n              <div className=\"progressbar-liquid\"></div>\r\n            </div>\r\n            <span className=\"progress\">{props.progress ? props.progress : 0} %</span>\r\n          </div>\r\n        </div>\r\n      )\r\n  }\r\n  \r\n  export default ProgressBar;\r\n  ","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\nimport ProgressBar from './ProgressBar'\r\n\r\nfunction TodoList() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [counter, setCounter] = useState(0);\r\n  const [completed, setCompleted] = useState(0);\r\n\r\n\r\n  const addTodo = todo => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n   \r\n    const newTodos = [todo, ...todos];\r\n\r\n    setTodos(newTodos);\r\n    console.log(...todos);\r\n    setCounter(counter+1)\r\n    console.log(counter);\r\n  };\r\n\r\n  const updateTodo = (todoId, newValue) => {\r\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return;\r\n    }\r\n    console.log(\"update!!!!!\")\r\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n    \r\n  };\r\n\r\n  const removeTodo = id => {\r\n    const removedItem = [...todos].find(todo => todo.id == id);\r\n    console.log(\"status\" + removedItem.isComplete)\r\n    const removedArr = [...todos].filter(todo => todo.id !== id);\r\n    console.log(\"remove!!!!!\")\r\n    if(removedItem.isComplete)\r\n    setCompleted(completed-1);\r\n\r\n    setTodos(removedArr);\r\n    setCounter(counter-1);\r\n    console.log(counter,completed);\r\n  };\r\n\r\n  const completeTodo = id => {\r\n    let updatedTodos = todos.map(todo => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n        todo.isComplete ? \r\n        setCompleted(completed+1) : \r\n        setCompleted(completed-1);\r\n        console.log(\"complete!!!!!\")\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n    console.log(counter,completed);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>What's the plan for Today?</h1>\r\n      <TodoForm onSubmit={addTodo} />\r\n      <Todo\r\n        todos={todos}\r\n        completeTodo={completeTodo}\r\n        removeTodo={removeTodo}\r\n        updateTodo={updateTodo}\r\n      />\r\n    <ProgressBar progress={Math.round(completed/counter*100*100)/100}/> \r\n    \r\n   </>\r\n  );\r\n}\r\n\r\nexport default TodoList;","export default __webpack_public_path__ + \"static/media/todo_img4.3237fda7.svg\";","import React from 'react';\r\nimport './App.css';\r\nimport TodoForm from './components/TodoForm';\r\nimport TodoList from './components/TodoList';\r\nimport TodoImg from './img/todo_img4.svg';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"main-component\">\r\n\r\n    <div className=\"todo-app\">\r\n    \r\n    <TodoList></TodoList>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}