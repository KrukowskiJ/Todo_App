{"version":3,"sources":["firebase.js","components/TodoForm.js","components/Todo.js","components/ProgressBar.js","components/TodoList.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","TodoForm","props","useState","edit","value","input","setInput","todosRef","collection","currentUser","uid","inputRef","useRef","useEffect","current","focus","handleChange","e","target","handleSubmit","preventDefault","test","add","text","complete","createdAt","FieldValue","serverTimestamp","onSubmit","className","placeholder","onChange","name","ref","onClick","doc","id","delete","Todo","completeTodo","removeTodo","useCollectionData","idField","todos","setEdit","map","todo","ProgressBar","counter","progress","Math","round","length","style","width","TodoList","set","merge","SignInWithGoogle","signInWithPopup","GoogleAuthProvider","SignIn","SignOut","signOut","App","useAuthState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3656a4f6.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app'\r\n\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/functions\";\r\n\r\nfirebase.initializeApp({\r\n    apiKey: \"AIzaSyCzThX_ZWlBgZOzCzgY0mDNH8lZ6tnd05k\",\r\n    authDomain: \"todo-list-91421.firebaseapp.com\",\r\n    projectId: \"todo-list-91421\",\r\n    storageBucket: \"todo-list-91421.appspot.com\",\r\n    messagingSenderId: \"750356644344\",\r\n    appId: \"1:750356644344:web:c64e71cc0ffba3f9cf960d\"\r\n})\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n//export const functions = firebase.functions();    \r\n\r\nexport default firebase;","import React, { useState, useEffect, useRef } from 'react';\r\nimport firebase from \"../firebase\"\r\nimport {firestore, auth } from \"../firebase\"\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : '')\r\n  const todosRef = firestore.collection(`users/${auth.currentUser.uid}/todos`);\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (!input || /^\\s*$/.test(input)) {\r\n      return;\r\n    }\r\n      todosRef.add({\r\n        text: input,\r\n        complete: false,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n      });\r\n    setInput('');\r\n  };\r\n  \r\n  const handleEdit = e => {\r\n    e.preventDefault();\r\n    if (!input || /^\\s*$/.test(input)) {\r\n      return;\r\n    }\r\n      todosRef.doc(props.edit.id).delete();\r\n      todosRef.add({\r\n        text: input,\r\n        complete: false,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n      });\r\n    \r\n    props.onSubmit({\r\n      edit:false\r\n    });\r\n    setInput('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className='todo-form'>\r\n      {props.edit ? (\r\n        <>\r\n          <input\r\n            placeholder='Update your item'\r\n            value={input}\r\n            onChange={handleChange}\r\n            name='text'\r\n            ref={inputRef}\r\n            className='todo-input edit'\r\n          />\r\n          <button onClick={handleEdit} className='todo-button edit'>\r\n            Update\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            placeholder='Add a todo'\r\n            value={input}\r\n            onChange={handleChange}\r\n            name='text'\r\n            className='todo-input'\r\n            ref={inputRef}\r\n          />\r\n          <button onClick={handleSubmit} className='todo-button'>\r\n            Add todo\r\n          </button>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\nimport { auth, firestore } from \"../firebase\"\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\"\r\n\r\nconst Todo = ({  completeTodo, removeTodo }) => {\r\n  const todosRef = firestore.collection(`users/${auth.currentUser.uid}/todos`);\r\n  const [todos] = useCollectionData(todosRef,  {idField:\"id\"});\r\n\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: ''\r\n  });\r\n\r\n\r\n function submitUpdate () {\r\n    setEdit({\r\n      id: null,\r\n      value: ''\r\n    });\r\n  };\r\n\r\n  if (edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n\r\n  return  todos ? (<div className=\"todo-list\">\r\n  {todos.map((todo) => \r\n    <div\r\n      className={todo.complete ? 'todo-row complete' : 'todo-row'}\r\n    >\r\n      <div className='todo-name' key={todo.id} onClick={() =>completeTodo(todo.id)} >\r\n        {todo.text}\r\n      </div>\r\n      <div className='icons'>\r\n        <RiCloseCircleLine\r\n          onClick={() => removeTodo(todo.id)}\r\n          className='delete-icon'\r\n        />\r\n        \r\n        <TiEdit\r\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n          className='edit-icon'\r\n        />\r\n      </div>\r\n    </div>\r\n  )}\r\n  </div>) : null\r\n};\r\n\r\nexport default Todo;","import \"../style/progress_bar.scss\"\r\nimport React, { useState } from 'react';\r\nimport { auth, firestore } from \"../firebase\"\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\"\r\nfunction ProgressBar(props){\r\n  const todosRef = firestore.collection(`users/${auth.currentUser.uid}/todos`);\r\n  const [todos] = useCollectionData(todosRef,  {idField:\"id\"});\r\n  let counter = 0;\r\n  let progress = 0;\r\n  function setTaskCounter(){\r\n    if(todos)\r\n    todos.map(todo => {\r\n      if(todo.complete)\r\n        counter++;\r\n    })\r\n    progress = todos ? Math.round(counter/todos.length*10000/100) : 0;\r\n\r\n  };\r\n      return (\r\n       \r\n        <div className=\"container\">\r\n           {setTaskCounter()}\r\n          <h1>Your progress bar!</h1>\r\n          <div className=\"progressbar-container\">\r\n            <div className=\"progressbar-complete\" style={{width: `${progress}%`}}>\r\n              <div className=\"progressbar-liquid\"></div>\r\n            </div>\r\n            <span className=\"progress\">{todos ? progress : 0} %</span>\r\n          </div>\r\n        </div>\r\n      )\r\n  }\r\n  \r\n  export default ProgressBar;\r\n  ","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\nimport ProgressBar from './ProgressBar'\r\nimport { auth, firestore } from \"../firebase\"\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\"\r\nfunction TodoList() {\r\n  const todosRef = firestore.collection(`users/${auth.currentUser.uid}/todos`);\r\n  const [todos] = useCollectionData(todosRef, {idField:\"id\"});\r\n\r\n  const removeTodo = id => {\r\n    todosRef.doc(id).delete();\r\n  };\r\n\r\n  const completeTodo = id => {\r\n    todos.map(todo => {\r\n      if (todo.id === id) { \r\n        todosRef.doc(todo.id).set({complete: !todo.complete}, {merge: true});\r\n      }\r\n    })\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>What's the plan for Today?</h1>\r\n      <TodoForm />\r\n      <Todo\r\n        completeTodo={completeTodo}\r\n        removeTodo={removeTodo}\r\n      />\r\n    <ProgressBar /> \r\n   </>\r\n  );\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport './App.css';\r\nimport TodoList from './components/TodoList';\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\nimport {auth} from \"./firebase\";\r\nimport firebase from './firebase';\r\n\r\nconst SignInWithGoogle =  () => auth.signInWithPopup(new firebase.auth.GoogleAuthProvider());\r\n\r\nconst SignIn =  () => (\r\n  <main>\r\n    <button onClick={SignInWithGoogle}>Sign In With Google</button>\r\n  </main>\r\n);\r\n\r\nconst SignOut =  () => auth.signOut();\r\n\r\nfunction App() {\r\n  const [user] = useAuthState(auth);\r\n  return user ? (\r\n    <div className=\"main-component\">\r\n\r\n    <div className=\"todo-app\">\r\n    \r\n    <TodoList></TodoList>\r\n    </div>\r\n    <button onClick={SignOut}>Sign Out</button>\r\n    </div>\r\n  ): <SignIn/>;\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}